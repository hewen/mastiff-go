HTTP:
  Addr: '0.0.0.0:8080' # HTTP server listen address
  TimeoutRead: 5000 # Timeout for reading requests in milliseconds
  TimeoutWrite: 10000 # Timeout for writing responses in milliseconds
  PprofEnabled: false # Enable pprof profiling endpoint
  Mode: 'release' # Server mode: debug, release, or test
  FrameworkType: 'fiber'
  Middlewares:
    Auth: # Auth middleware configuration
      JWTSecret: 'secret' # Secret for JWT
      WhiteList: ['/login'] # Path whitelist (exact match or prefix)
      HeaderKey: 'Authorization' # e.g., "Authorization"
      TokenPrefixes: ['Bearer', 'Token'] # e.g., "Bearer", "Token"
    RateLimit: # Rate limit middleware configuration
      Default:
        Mode: 'allow' # Mode is the mode of the rate limiter, either "allow" or "wait".
        EnableUserID: true # Enable rate limit by user ID
        Burst: 10 # Burst is the maximum number of events that can be sent in a single burst.
        Rate: 10 # Rate is the maximum number of events that can be sent per second.
      PerRoute:
        '/login':
          Mode: 'allow' # Mode is the mode of the rate limiter, either "allow" or "wait".
          EnableIP: true # Enable rate limit by IP
          Burst: 10 # Burst is the maximum number of events that can be sent in a single burst.
          Rate: 10 # Rate is the maximum number of events that can be sent per second.
    CircuitBreaker: # Circuit breaker middleware configuration
      Interval: 1 # Interval in seconds
      Timeout: 1 # Timeout in seconds
      MaxRequests: 10000 # MaxRequests is the maximum number of requests that can be sent in a single interval.
      Policy:
        Type: 'consecutive_failures' # Type: "consecutive_failures" | "failure_rate"
        ConsecutiveFailures: 20 # Continuous failure threshold (for consecutive_failures)
        MinRequests: 1000 # Minimum number of requests (for failure_rate)
        FailureRateThreshold: 0.1 # Failure rate threshold (for failure_rate)
    TimeoutSeconds: 30 # Timeout seconds for requests
    EnableMetrics: true # Enable metrics middleware
    EnableRecovery: true # Enable recovery middleware, default enabled
    EnableLogging: true # Enable logging middleware, default enabled

RPC:
  Addr: '0.0.0.0:9090' # gRPC server listen address
  Timeout: 10000 # Timeout for gRPC requests in milliseconds
  Reflection: true # Enable gRPC reflection service
  FrameworkType: 'grpc'

Queue:
  PoolSize: 10 # Goroutine pool size for processing queue messages
  EmptySleepInterval: 500ms # Sleep duration when queue is empty (in Go duration format)
  QueueName: 'test'

Mysql:
  DataSourceName:
    'user:password@tcp(127.0.0.1)/dbname?charset=utf8mb4&parseTime=true'
    # MySQL data source name
  RegisterHookDriver: true # Whether to register driver hook (for logging/tracing)

Redis:
  Addr: '127.0.0.1:6379' # Redis server address
  Password: '' # Redis password, leave empty if none
  DB: 0 # Redis DB index
  RegisterHookDriver: true # Whether to register driver hook

Logger:
  Level: 'info' # log level: debug, info, warn, error, etc.
  Outputs: ['stdout', 'file'] # List of output targets: "stdout", "stderr", "file", default stdout
  Backend: 'zerolog' # Logging backend: "std", "zap", or "zerolog", default zerolog
  EnableMasking: false # Enable masking of sensitive fields
  FileOutput: # File output config (used when "file" is in Outputs)
    Path: '/tmp/access.log' # Log file path
    RotatePolicy: 'daily' # Rotation policy: "daily", "size", or "none"
    MaxSize: 100 # Max file size in MB (used when RotatePolicy is "size")
    MaxBackups: 7 # Max number of old log files to retain
    MaxAge: 30 # Max age (in days) to keep old log files
    Compress: true # Compress rotated log files (gzip)

Custom:
  CustomKey: 'custom_value'
