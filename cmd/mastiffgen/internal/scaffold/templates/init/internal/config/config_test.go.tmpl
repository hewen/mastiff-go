// Package config represents the configuration of the application.
package config

import (
	"fmt"
	"os"
	"testing"

	"github.com/stretchr/testify/assert"
)

const (
	testConfigName = "tmpconfig.yaml"
)

func TestInitConfig(t *testing.T) {
	name := testConfigName
	defer func() {
		_ = os.Remove(name)
	}()

	content := []byte(`
logger:
  level: "debug"
http:
  addr: ":8080"
grpc:
  addr: ":9090"
mysql:
  dsn: "user:pass@tcp(127.0.0.1:3306)/dbname"
redis:
  addr: "localhost:6379"
custom:
  custom_key: "custom_value"
`)
	err := os.WriteFile(name, content, 0600)
	assert.Nil(t, err)

	c, err := InitConfig(name)
	assert.Nil(t, err)
	assert.NotNil(t, c)
	assert.EqualValues(t, "debug", c.Logger.Level)
}

func TestInitConfig_FileNotFound(t *testing.T) {
	_, err := InitConfig("notexist.yaml")
	assert.Error(t, err)
}

func TestInitConfig_InvalidContent(t *testing.T) {
	name := testConfigName
	defer func() {
		_ = os.Remove(name)
	}()

	content := []byte(`{ invalid_yaml`)
	err := os.WriteFile(name, content, 0600)
	assert.Nil(t, err)

	_, err = InitConfig(name)
	assert.Error(t, err)
}

func TestOnChange(_ *testing.T) {
	onChange(nil, nil)
	onChange(nil, fmt.Errorf("test error"))
}
