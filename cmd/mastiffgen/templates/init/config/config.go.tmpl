// Package config provides the configuration structure and initialization for the application.
package config

import (
	"github.com/hewen/mastiff-go/logger"
	"github.com/hewen/mastiff-go/server"
	"github.com/hewen/mastiff-go/store"
	"github.com/spf13/viper"
)

// Config holds the configuration for the application, including logger, HTTP, gRPC, MySQL, and Redis configurations.
type Config struct {
	Logger logger.Config
	HTTP   *server.HTTPConf
	Grpc   *server.GrpcConf
	Queue  *server.QueueConf
	Mysql  *store.MysqlConf
	Redis  *store.RedisConf
}

// InitConfig initializes the configuration by reading the specified config file.
func InitConfig(confFile string) (*Config, error) {
	conf := new(Config)
	viper.SetConfigFile(confFile)

	err := viper.ReadInConfig()
	if err != nil {
		return nil, err
	}

	err = viper.Unmarshal(conf)
	if err != nil {
		return nil, err
	}

	return conf, nil
}
